-- Leading Column (Index의 첫번째 컬럼이 중요)
-- (A, B, C) 인 경우 A / A,B / A,B,C 가 최적(순서 관계없어 보임 - 12c 기준)
--                B,A / C,A / A,C 도 같아보이는 플랜 생성
-- (B, A, C) 인 경우 B / B,A / B,A,C 최적

-- 인덱스가 다음과 같을때
PK_TB_INOUT_TM_CAR : (CENTER_CD, INOUT_DT, CAR_NO, INOUT_TYPE_CD)
IDX_TB_INOUT_TM_CAR : (CAR_GBN_CD, INOUT_TYPE_CD, INOUT_DT)
IDX2_TB_INOUT_TM_CAR : (CENTER_CD, INOUT_TYPE_CD, INOUT_DT)


-- 1.실행한 경우(A,B,C)
SELECT CAR_GBN_CD, INOUT_TYPE_CD, INOUT_DT
FROM PTLADM.TB_INOUT_TM_CAR
WHERE CAR_GBN_CD = '01'
AND INOUT_TYPE_CD = '01' 
AND INOUT_DT = TO_DATE('2018-10-19 15:34:58', 'YYYY-MM-DD HH24:MI:SS');

PLAN : INDEX (RANGE SCAN) IDX_TB_INOUT_TM_CAR 의 결과를 보임

-- 2.실행한 경우(A,C)
PLAN : INDEX (RANGE SCAN) IDX_TB_INOUT_TM_CAR 의 결과를 보임
-- 3.실행한 경우(C,A)
PLAN : INDEX (RANGE SCAN) IDX_TB_INOUT_TM_CAR 의 결과를 보임
-- 4.실행한 경우(B,A)
PLAN : INDEX (RANGE SCAN) IDX_TB_INOUT_TM_CAR 의 결과를 보임

-- 6.실행한 경우(B,C)
SELECT CAR_GBN_CD, INOUT_TYPE_CD, INOUT_DT
FROM PTLADM.TB_INOUT_TM_CAR
WHERE INOUT_TYPE_CD = '01'
AND INOUT_DT = TO_DATE('2018-10-19 15:34:58', 'YYYY-MM-DD HH24:MI:SS');

PLAN : INDEX (SKIP SCAN) IDX2_TB_INOUT_TM_CAR 의 결과를 보임

-- EX.(A,B,C,D) 중에 (C,D)의 경우
SELECT CENTER_CD, INOUT_DT, CAR_NO, INOUT_TYPE_CD
FROM PTLADM.TB_INOUT_TM_CAR
WHERE CAR_NO = '08테0001'
AND INOUT_TYPE_CD = '02';

PLAN : INDEX (FAST FULL SCAN) PK_TB_INOUT_TM_CAR

-- EX.(A,B,C,D) 중에 (C,B)의 경우
SELECT CENTER_CD, INOUT_DT, CAR_NO, INOUT_TYPE_CD
FROM PTLADM.TB_INOUT_TM_CAR
WHERE CAR_NO = '08테0001'
AND INOUT_DT = TO_DATE('2018-10-18 15:19:39', 'YYYY-MM-DD HH24:MI:SS');

PLAN : TABLE ACCESS (BY INDEX ROWID BATCHED) TB_INOUT_TM_CAR
                   INDEX (SKIP SCAN) IDX2_TB_INOUT_TM_CAR
-- 다른곳에서 SKIP SCAN 한 후 차례대로 BATCH 해서 가져옴 (순서대로 되어있는 경우)

-- EX.(A,B,C,D) 중에 (A,D)의 경우
SELECT CENTER_CD, INOUT_DT, CAR_NO, INOUT_TYPE_CD
FROM PTLADM.TB_INOUT_TM_CAR
WHERE CENTER_CD = 'DT1000'
AND INOUT_TYPE_CD = '02';

PLAN : INDEX (FAST FULL SCAN) PK_TB_INOUT_TM_CAR
-- ROW 수가 많아서 FFS 가 된듯